#!/bin/ash
# ======================================
# Velocity Proxy Installation Script
# Updated for PaperMC API (2025)
# ======================================
# Server Files: /mnt/server

PROJECT="velocity"
SERVER_DIR="/mnt/server"
SERVER_JARFILE="velocity.jar"

echo ">>> Fetching latest Velocity version info..."
VELOCITY_VERSION=$(curl -sSL "https://api.papermc.io/v2/projects/${PROJECT}" | jq -r '.versions[-1]')
BUILD_NUMBER=$(curl -sSL "https://api.papermc.io/v2/projects/${PROJECT}/versions/${VELOCITY_VERSION}" | jq -r '.builds[-1]')
JAR_NAME="${PROJECT}-${VELOCITY_VERSION}-${BUILD_NUMBER}.jar"
DOWNLOAD_URL="https://api.papermc.io/v2/projects/${PROJECT}/versions/${VELOCITY_VERSION}/builds/${BUILD_NUMBER}/downloads/${JAR_NAME}"

echo "-----------------------------------------"
echo "Velocity Version: ${VELOCITY_VERSION}"
echo "Build Number: ${BUILD_NUMBER}"
echo "Download URL: ${DOWNLOAD_URL}"
echo "-----------------------------------------"

cd "${SERVER_DIR}"

# Backup any existing jar
if [ -f "${SERVER_JARFILE}" ]; then
    echo "Backing up old Velocity jar..."
    mv "${SERVER_JARFILE}" "${SERVER_JARFILE}.old"
fi

# Download Velocity
echo ">>> Downloading Velocity from PaperMC..."
curl -sSL -o "${SERVER_JARFILE}" "${DOWNLOAD_URL}"

# Validate
if [ ! -s "${SERVER_JARFILE}" ]; then
    echo "❌ ERROR: Download failed or jar is empty!"
    exit 1
fi

# Create config file if missing
if [ ! -f "velocity.toml" ]; then
    echo ">>> Creating default velocity.toml (v2.7)..."
    cat <<'EOF' > velocity.toml
# Velocity Configuration File (config-version 2.7)
# https://velocitypowered.com/wiki/

config-version = "2.7"

bind = "0.0.0.0:25565"
motd = "<#09add3>A Velocity Server"
show-max-players = 500
online-mode = true
force-key-authentication = true
prevent-client-proxy-connections = false
player-info-forwarding-mode = "NONE"
forwarding-secret-file = "forwarding.secret"
announce-forge = false
kick-existing-players = false
ping-passthrough = "DISABLED"
sample-players-in-ping = false
enable-player-address-logging = true

[servers]
lobby = "127.0.0.1:30066"
factions = "127.0.0.1:30067"
minigames = "127.0.0.1:30068"

try = [ "lobby" ]

[forced-hosts]
"lobby.example.com" = [ "lobby" ]
"factions.example.com" = [ "factions" ]
"minigames.example.com" = [ "minigames" ]

[advanced]
compression-threshold = 256
compression-level = -1
login-ratelimit = 3000
connection-timeout = 5000
read-timeout = 30000
haproxy-protocol = false
tcp-fast-open = false
bungee-plugin-message-channel = true
show-ping-requests = false
failover-on-unexpected-server-disconnect = true
announce-proxy-commands = true
log-command-executions = false
log-player-connections = true
accepts-transfers = false
enable-reuse-port = false
command-rate-limit = 50
forward-commands-if-rate-limited = true
kick-after-rate-limited-commands = 0
tab-complete-rate-limit = 10
kick-after-rate-limited-tab-completes = 0

[query]
enabled = false
port = 25565
map = "Velocity"
show-plugins = false
EOF
else
    echo "velocity.toml already exists — skipping."
fi

# Forwarding secret
if [ ! -f "forwarding.secret" ]; then
    echo ">>> Creating forwarding.secret..."
    date +%s | sha256sum | base64 | head -c 12 > forwarding.secret
else
    echo "forwarding.secret already exists — skipping."
fi

echo "✅ Velocity installation complete!"
